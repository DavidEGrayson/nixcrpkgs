diff -ur compiler-rt-20.1.4.src-orig/cmake/base-config-ix.cmake compiler-rt-20.1.4.src/cmake/base-config-ix.cmake
--- compiler-rt-20.1.4.src-orig/cmake/base-config-ix.cmake	2025-05-05 13:34:59.405960161 -0700
+++ compiler-rt-20.1.4.src/cmake/base-config-ix.cmake	2025-05-05 13:36:34.293727160 -0700
@@ -127,24 +127,6 @@
   "Path where compiler-rt data files should be installed.")
 
 if(APPLE)
-  # On Darwin if /usr/include/c++ doesn't exist, the user probably has Xcode but
-  # not the command line tools (or is using macOS 10.14 or newer). If this is
-  # the case, we need to find the OS X sysroot to pass to clang.
-  if(NOT EXISTS /usr/include/c++)
-    execute_process(COMMAND xcrun -sdk macosx --show-sdk-path
-       OUTPUT_VARIABLE OSX_SYSROOT
-       ERROR_QUIET
-       OUTPUT_STRIP_TRAILING_WHITESPACE)
-    if (NOT OSX_SYSROOT OR NOT EXISTS ${OSX_SYSROOT})
-      message(WARNING "Detected OSX_SYSROOT ${OSX_SYSROOT} does not exist")
-    else()
-      message(STATUS "Found OSX_SYSROOT: ${OSX_SYSROOT}")
-      set(OSX_SYSROOT_FLAG "-isysroot${OSX_SYSROOT}")
-    endif()
-  else()
-    set(OSX_SYSROOT_FLAG "")
-  endif()
-
   try_compile_only(COMPILER_RT_HAS_DARWIN_TARGET_VARIANT_FLAG
                    FLAGS
                    "-target" "x86_64-apple-macos10.15"
diff -ur compiler-rt-20.1.4.src-orig/cmake/config-ix.cmake compiler-rt-20.1.4.src/cmake/config-ix.cmake
--- compiler-rt-20.1.4.src-orig/cmake/config-ix.cmake	2025-05-05 13:34:59.416487089 -0700
+++ compiler-rt-20.1.4.src/cmake/config-ix.cmake	2025-05-05 13:39:30.087320156 -0700
@@ -500,11 +500,11 @@
   # We're setting the flag manually for each target OS
   set(CMAKE_OSX_DEPLOYMENT_TARGET "")
 
-  set(DARWIN_COMMON_CFLAGS -stdlib=libc++)
-  set(DARWIN_COMMON_LINK_FLAGS
-    -stdlib=libc++
-    -lc++
-    -lc++abi)
+  #set(DARWIN_COMMON_CFLAGS -stdlib=libc++)
+  #set(DARWIN_COMMON_LINK_FLAGS
+  #  -stdlib=libc++
+  #  -lc++
+  #  -lc++abi)
 
   llvm_check_compiler_linker_flag(C "-fapplication-extension" COMPILER_RT_HAS_APP_EXTENSION)
   if(COMPILER_RT_HAS_APP_EXTENSION)
